vars {
  promptText: As a LLM, you will receive a markdown page in the following form with following title: 1. Act as: the behaviour and actor you should behave as. 2. Story: a user story expressing the intent of what you should answer to. 3. (Optional) Acceptance criteria in th form 'Given-When-Then'. 4. Format: the expected format you should answer with. ## Story Act as an opensource contributor discovering of a project of interest on Github , I want to get a readme for a code generator that has an english dsl ## Acceptance criteria ### Requirement 1 Given a Github user, when I read the readme of this 'Prompt driven development' repository, then it tell that this project is a code generator based on AI. ### Requirement 2 Given a Github user, when I read the second section of readme of this repository, then it tell that this the code generators uses scrum stories, acceptance criteria and practices description as an input. ### Requirement 3 Given a Github user, when I read the third section of readme of this repository, then it explains that the syntax is asciidoctor and describes some snippets and pointers to asciidoctor doc. ### Requirement 4 Given a Github user, when I read the according section of readme of this repository, then it describes that the licence is Apache v2. ### Requirement 5 Given a Github user, when I read the according section of readme of this repository, then it describes that the next step is to generate the library itself using prompt until the point laingchain4j will be used. ## Output output format in raw asciidoctor
}
vars:secret [
  apiKey
]
